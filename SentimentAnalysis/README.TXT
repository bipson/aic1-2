Sample Web Service v1.0 (wsdl2java, document/literal)

- here is a simple service 
- if all is well configured the process should be:
		1. build the project with maven -> result is .war
		2. deploy on tomcat(geronimo)
		3. test with soapUI
		4. import to eclipse

- in the ideal case the process could be like: 
		1. import to eclipe
		2. one-click build inside the eclipse (with maven eclipse-plugin) and deploy to tomcat automaticly
		3. test with soapUI
  but there are some additional steps to be taken, so this will come (hopefully) later


	!!! If something doesnt go well write me or send me a printscreen as it's possible I've forgotten to mention some step. !!!



SampleProject directory:

src/							- sources ;) 
src/main/java					- hand-written implementation classes
src/main/webapp/WEB-INF/wsdl 	- wsdls used by cxf

target/** 						- files generated by maven 
target/generated-sources/cxf	- cxf generated classes

pom.xml							- project description for maven



Manual:

0.1 	Make sure eclipse is using JRE6 and JDK1.6 (not 7) (JRE is set to JRE7 by default and then 
		he obviously can't finde jdk1.7 as it's not there) (might not be directly related to the sample 
		but has to be done anyways)

1.1		Open cmd and move to the base directory of the project (the one with pom.xml)
1.2		Run : mvn package	- if successfull there will be target/SampleApp.war

2.1		Start up the geronimo
2.2		Deploy with http://localhost:8080/console
2.3		go to: http://localhost:8080/SampleApp/User?wsdl - If you dont see .wsdl file something went wron :)

3.1		go to: http://sourceforge.net/projects/soapui/files/ - download soapUI to test the service
3.2		when installed, import project: choose wsdl: src\main\webapp\WEB-INF\wsdl\user.service.wsdl 
3.3 	In the project go to "UserSOAP TestSuite/addUser TestCase/Test Steps (1)/addUser"
3.4		make sure that the adress is set to http://localhost:8080/SampleApp/User"and run the Request 1 (with 
		the green arrow)
		Response should be:

		<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
   			<soap:Body>
      			<removeUserResponse xmlns="samplenamespace.user.datatypes">true</removeUserResponse>
   			</soap:Body>
		</soap:Envelope>

4.1 	In eclipse in Help/Eclipse Marketplace search for maven and install the Maven Integration for Eclipse 
		(not the WTP).
4.2		Import the projest as an Existing Maven Project
4.3 	To change the functionality of the service choose in eclipse UserImpl.java located in:
			src/main/java
				samplenamespace
					UserImpl.java
4.4		Rewrite the body of the functions which correspond to SOAP operations.
